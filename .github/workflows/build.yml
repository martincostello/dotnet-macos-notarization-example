name: build

on:
  push:
    branches: [ main ]
    tags: [ v* ]
    paths-ignore:
    - '**/*.md'
    - '**/*.gitignore'
    - '**/*.gitattributes'
  pull_request:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  DOTNET_GENERATE_ASPNET_CERTIFICATE: false
  DOTNET_MULTILEVEL_LOOKUP: 0
  DOTNET_NOLOGO: true
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: 1
  NUGET_XMLDOC_MODE: skip

jobs:
  build:
    name: build
    runs-on: macos-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Setup .NET SDK
      uses: actions/setup-dotnet@v1

    - name: Build and publish
      shell: pwsh
      run: ./build.ps1

    - name: Publish app
      uses: actions/upload-artifact@v2
      with:
        name: app
        path: ./artifacts/HelloWorld.app

  notarize:
    name: notarize
    needs: build
    runs-on: macos-latest

    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download app
      uses: actions/download-artifact@v2
      with:
        name: app

    - name: Select Xcode 12.4
      uses: devbotsxyz/xcode-select@v1
      with:
        version: "12.4"

    - name: Import Distribution Certificate
      uses: devbotsxyz/import-signing-certificate@v1
      with:
        certificate-data: ${{ secrets.DISTRIBUTION_CERTIFICATE_DATA }}
        certificate-passphrase: ${{ secrets.DISTRIBUTION_CERTIFICATE_PASSPHRASE }}
        keychain-password: ${{ secrets.KEYCHAIN_PASSWORD }}

    - name: Sign app
      shell: bash
      run: ./sign.sh
      env:
        SIGNING_IDENTITY: ${{ secrets.SIGNING_IDENTITY }}

    - name: Notarize app
      uses: devbotsxyz/xcode-notarize@v1
      with:
        product-path: ./HelloWorld.app
        appstore-connect-username: ${{ secrets.NOTARIZATION_USERNAME }}
        appstore-connect-password: ${{ secrets.NOTARIZATION_PASSWORD }}

    - name: Staple app
      uses: devbotsxyz/xcode-staple@v1
      with:
        product-path: ./Export/HelloWorld.app

    - name: Package signed app
      run: ditto -V -c -k --keepParent ./Export/HelloWorld.app ./HelloWorld.zip

    - name: Publish signed app
      uses: actions/upload-artifact@v2
      with:
        name: app-signed
        path: ./HelloWorld.zip

  release:
    if: ${{ startsWith(github.ref, 'refs/tags/v') }}
    name: release
    needs: notarize
    runs-on: macos-latest

    steps:

    - name: Download signed app
      uses: actions/download-artifact@v2
      with:
        name: app-signed

    - name: Create GitHub release
      uses: softprops/action-gh-release@v1
      with:
        draft: true
        files: '*.zip'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
